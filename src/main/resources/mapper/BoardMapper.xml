<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.minboard.mapper.BoardMapper">

    <resultMap id="boardDtoResultMap" type="BoardDto">
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="boardGroup" column="board_group"/>
        <result property="boardDepth" column="board_depth"/>
        <result property="boardSort" column="board_sort"/>
        <result property="delYn" column="del_yn"/>
        <result property="boardId" column="board_id"/>
        <result property="boardAdminId" column="board_admin_id"/>
        <result property="commentsCount" column="comments_count"/>
        <result property="commentsYn" column="comments_yn"/>
        <result property="replyYn" column="reply_yn"/>
        <result property="fileCount" column="file_count"/>
        <result property="attachedFileYn" column="attached_file_yn"/>
        <result property="attachedFileCount" column="attached_file_count"/>
        <result property="categoryName" column="category_name" />
        <result property="categoryNumber" column="category_number" />
        <collection property="uploadFileDtoList" column="id" javaType="java.util.List" select="selectUploadFileList"/>
    </resultMap>

    <resultMap id="UploadFileDtoResultMap" type="UploadFileDto">
        <result property="originalFileName" column="original_file_name"/>
        <result property="storeFileName" column="store_file_name"/>
        <result property="extensionName" column="extension_name"/>
        <result property="storeFileSize" column="store_file_size"/>
        <result property="storeFilePath" column="store_file_path"/>
        <result property="createTime" column="create_time"/>
        <result property="boardId" column="board_id"/>
    </resultMap>

    <resultMap id="boardUpdateVoResultMap" type="BoardUpdateVo">
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delYn" column="del_yn"/>
        <result property="boardGroup" column="board_group"/>
        <result property="boardDepth" column="board_depth"/>
        <result property="boardSort" column="board_sort"/>
        <result property="categoryName" column="category_name" />
        <result property="categoryNumber" column="category_number" />
    </resultMap>

    <select id="selectBoardList" parameterType="BoardDto" resultType="BoardDto" resultMap ="boardDtoResultMap">
        select
                b.id
                , ba.category_name
                , ba.category_number
                , b.title
                , b.board_group
                , b.board_sort
                , b.board_depth
                , (
                    select count(board_id)
                     from comments
                     where comments.board_id = b.id and comments.del_yn = 'N'
                ) as comments_count
                , (
                    select count(board_id)
                    from upload_file
                    where upload_file.board_id = b.id
                ) as file_count
                , b.create_time
                , b.update_time
                , b.del_yn

        from board as b 
            join board_admin as ba on b.board_admin_id = ba.id
            
        where 
            b.del_yn = 'N'and ba.category_number = #{categoryNumber}

        order by
            board_group desc
            , board_sort asc

        limit #{paginationInfo.firstRecordIndex}, #{recordsPerPage};
    </select>

    <select id="selectBoardAllList" parameterType="BoardDto" resultType="BoardDto" resultMap ="boardDtoResultMap">
        select
            b.id
            , ba.category_name
            , ba.category_number
            , b.title
            , b.board_group
            , b.board_sort
            , b.board_depth
            , (
                select count(board_id)
                from comments
                where comments.board_id = b.id and comments.del_yn = 'N'
            ) as comments_count
            , (
                select count(board_id)
                from upload_file
                where upload_file.board_id = b.id
            ) as file_count
            , b.create_time
            , b.update_time
            , b.del_yn

        from board as b 
            join board_admin as ba on b.board_admin_id = ba.id
        
        where
            b.del_yn = 'N'

        order by
            board_group desc
            , board_sort asc

        limit #{paginationInfo.firstRecordIndex}, #{recordsPerPage};
    </select>

    <select id="selectUploadFileList" parameterType="java.util.Map" resultType="UploadFileDto" resultMap ="UploadFileDtoResultMap">
        select
                id
                , original_file_name
                , store_file_name
                , extension_name
                , store_file_size
                , store_file_path
                , create_time
                , board_id

        from upload_file

        where
            board_id = #{id}
    </select>

    <select id="totalCountBoard" resultType="int">
        select count(*)
        from board
        where del_yn = 'N'
    </select>

    <!--    게시판 상세보기-->
    <select id="selectBoard" resultType="BoardDto" resultMap="boardDtoResultMap" >

        select
               b.id
               , ba.category_name
               , ba.category_number
               , b.title
               , b.contents
               , b.board_group
               , b.board_sort
               , b.board_depth
               , ba.attached_file_yn
               , ba.attached_file_count
               , ba.comments_yn
               , ba.reply_yn
               , b.create_time
               , b.update_time
               , b.board_admin_id
               , b.del_yn
        from board as b
            join board_admin as ba on b.board_admin_id = ba.id

        where
              b.id = #{id} and b.del_yn = 'N'
    </select>

    <select id="selectBoardUpdate" resultType="BoardUpdateVo" resultMap="boardUpdateVoResultMap" >
        select
               b.id
               , ba.category_name
               , ba.category_number
               , b.title
               , b.contents
               , b.create_time
               , b.update_time

        from board as a
            join board_admin as ba

        where
              b.id = #{id} and b.del_yn = 'N'
    </select>

    <select id="findByBoardList" parameterType="int" resultType="BoardDto" resultMap="boardDtoResultMap">
        select
              b.id
             , ba.category_name
             , ba.category_number
             , b.title
             , b.contents
             , b.create_time
             , b.update_time
             , b.del_yn
             , b.board_admin_id
             , uf.board_id

        from board as b
                join board_admin as ba on ba.id = b.board_admin_id
                join upload_file uf on b.id = uf.board_id

        where
            b.del_yn = 'N' and ba.id = #{id};
    </select>

    <!--- 생성하기  -->
    <insert id="insertBoard"
            parameterType="BoardSaveVo"
            useGeneratedKeys ="true"
            keyProperty="id">

        insert into board(
                  title
                  , contents
                  , board_group
                  , board_sort
                  , board_depth
                  , create_time
                  , update_time
                  , board_admin_id
                )values(
                    #{title}
                    , #{contents}
                    , #{boardGroup}
                    , #{boardSort}
                    , #{boardDepth}
                    , #{createTime}
                    , #{updateTime}
                    , #{boardAdminId}
                )
    </insert>

    <!--수정하기-->
    <update id="updateBoard" parameterType="BoardUpdateVo">
        update board
        set
            title = #{title}
            , contents = #{contents}
            , update_time = #{updateTime}

        where
              del_yn = 'N' and id = #{id}
    </update>

    <update id="updateBoardGroUpset" parameterType="int">
        update board
        set
            board_group = #{id}
        where
              id = #{id} and del_yn = 'N'
    </update>

    <update id="deleteBoard" parameterType="int">
        update board

        set
            del_yn = 'Y'

        where
            del_yn = 'N' and id = #{id}
    </update>

    <update id="deleteBoardAdmin" parameterType="int">
        update board as b
            join board_admin as ba on ba.id = b.board_admin_id
            join comments as co on b.id = co.board_id

        set
             ba.del_yn = 'Y'
            , b.del_yn = 'Y'
            , co.del_yn = 'Y'

        where
            b.del_yn = 'N'
            and ba.id = #{id}
            and b.board_admin_id = ba.id
    </update>

    <select id="countComments" resultType="int">
        select
            count(*) as commentsCount
        from board as b
                join comments as c on b.id = c.board_id
        where
            c.del_yn = 'N' and c.board_id = #{boardId}
    </select>

    <select id="countAttachedFile" resultType="int" >
        select
            count(*) as attachedFileCount
        from board as b
            join upload_file as u on b.id = u.board_id
        where
            u.del_yn = 'N' and u.board_id = #{boardId}
    </select>

    <select id="hierarchicalCalculationFormula" resultType="int" >
        select
                ifnull(min(board_sort), 0)

        from board

        where
              board_group = ${boardGroup}
          and board_sort > ${boardSort}
          and board_depth <![CDATA[ <= ]]> ${boardDepth}
          and del_yn = 'N';
    </select>

    <select id="calculationFormulaResultZero" resultType="int">
        select
            ifnull(max(board_sort), 0) + 1

        from board

        where
            board_group = ${boardGroup} and del_yn = 'N';
    </select>

    <select id="selectBoardReply" resultType="BoardDto" resultMap="boardDtoResultMap" >
        select
                b.id
                , b.title
                , ba.category_name
                , ba.category_number
                , b.board_group
                , b.board_sort
                , b.board_depth
                , b.board_admin_id
                , b.del_yn
        from
            board as b
                join board_admin as ba on b.board_admin_id = ba.id
        where
            b.id = #{id} and b.del_yn = 'N'
    </select>

    <insert id="insertBoardReply"
            parameterType="BoardSaveVo"
            useGeneratedKeys ="true"
            keyProperty="id">

        insert into board(
                    title
                    , contents
                    , board_group
                    , board_sort
                    , board_depth
                    , create_time
                    , update_time
                    , board_admin_id

        )values(
                   #{title}
                   , #{contents}
                   , #{boardGroup}
                   , #{boardSort}
                   , #{boardDepth} + 1
                   , #{createTime}
                   , #{updateTime}
                   , #{boardAdminId}
               )
    </insert>

    <update id="calculationFormulaResultNotZero" parameterType="BoardSaveVo">
        update board

        set board_sort = board_sort + 1

        where
            board_group =  #{boardGroup}
          and board_sort <![CDATA[ >= ]]>  #{boardSort}
          and del_yn = 'N';
    </update>

    <update id="decreaseSort" parameterType="BoardDto">
        update  board
        set     board_sort = board_sort - 1
        where   board_group = ${boardGroup} and board_sort > ${boardSort}
    </update>
</mapper>