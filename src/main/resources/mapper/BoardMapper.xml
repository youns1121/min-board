<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.minboard.mapper.BoardMapper">

    <resultMap id="boardDtoResultMap" type="BoardDto">
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="boardGroup" column="board_group"/>
        <result property="boardDepth" column="board_depth"/>
        <result property="boardSort" column="board_sort"/>
        <result property="delYn" column="del_yn"/>
        <result property="boardId" column="board_id"/>
        <result property="boardAdminId" column="board_admin_id"/>
        <result property="commentsCount" column="comments_count"/>
        <result property="commentsYn" column="comments_yn"/>
        <result property="replyYn" column="reply_yn"/>
        <result property="fileCount" column="file_count"/>
        <result property="attachedFileYn" column="attached_file_yn"/>
        <result property="attachedFileCount" column="attached_file_count"/>
        <result property="categoryName" column="category_name" />
        <result property="categoryNumber" column="category_number" />
        <collection property="uploadFileDtoList" column="id" javaType="java.util.List" select="selectUploadFileList"/>
    </resultMap>

    <resultMap id="UploadFileDtoResultMap" type="UploadFileDto">
        <result property="originalFileName" column="original_file_name"/>
        <result property="storeFileName" column="store_file_name"/>
        <result property="extensionName" column="extension_name"/>
        <result property="storeFileSize" column="store_file_size"/>
        <result property="storeFilePath" column="store_file_path"/>
        <result property="createTime" column="create_time"/>
        <result property="boardId" column="board_id"/>
    </resultMap>

    <resultMap id="boardUpdateVoResultMap" type="BoardUpdateVo">
        <id property="id" column="id"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delYn" column="del_yn"/>
        <result property="boardGroup" column="board_group"/>
        <result property="boardDepth" column="board_depth"/>
        <result property="boardSort" column="board_sort"/>
        <result property="categoryName" column="category_name" />
        <result property="categoryNumber" column="category_number" />
    </resultMap>

    <select id="selectBoardList" parameterType="BoardDto" resultType="BoardDto" resultMap ="boardDtoResultMap">
        SELECT
                b.id,
                ba.category_name,
                ba.category_number,
                b.title,
                b.board_group,
                b.board_sort,
                b.board_depth,
                (
                    SELECT count(board_id)
                     FROM comments
                     WHERE comments.board_id = b.id AND comments.del_yn = 'N'
                ) AS comments_count,
                (
                    SELECT count(board_id)
                    FROM upload_file
                    WHERE upload_file.board_id = b.id
                ) AS file_count,
                b.create_time,
                b.update_time,
                b.del_yn

        FROM
                board AS b
                    JOIN board_admin AS ba ON b.board_admin_id = ba.id
        <where>
                b.del_yn = 'N'

                <if test="categoryNumber != 0">
                    AND ba.category_number = #{categoryNumber}
                </if>
        </where>

        ORDER BY
                board_group DESC,
                board_sort ASC

        limit #{paginationInfo.firstRecordIndex}, #{recordsPerPage};
    </select>

    <select id="selectBoardAllList" parameterType="BoardDto" resultType="BoardDto" resultMap ="boardDtoResultMap">
        SELECT
            b.id,
            ba.category_name,
            ba.category_number,
            b.title,
            b.board_group,
            b.board_sort,
            b.board_depth,
            (
                SELECT count(board_id)
                FROM comments
                WHERE comments.board_id = b.id AND comments.del_yn = 'N'
            ) AS comments_count,
            (
                SELECT count(board_id)
                FROM upload_file
                WHERE upload_file.board_id = b.id
            ) AS file_count,
            b.create_time,
            b.update_time,
            b.del_yn

        FROM
            board AS b
                JOIN board_admin AS ba ON b.board_admin_id = ba.id
        WHERE
            b.del_yn = 'N' AND

        ORDER BY
            board_group DESC,
            board_sort ASC

        limit #{paginationInfo.firstRecordIndex}, #{recordsPerPage};
    </select>

    <select id="selectUploadFileList" parameterType="java.util.Map" resultType="UploadFileDto" resultMap ="UploadFileDtoResultMap">
        SELECT
                id,
                original_file_name,
                store_file_name,
                extension_name,
                store_file_size,
                store_file_path,
                create_time,
                board_id

        FROM
                upload_file

        WHERE
                board_id = #{id}
    </select>

    <select id="totalCountBoard" resultType="int">
        SELECT count(*)
        FROM board
        WHERE del_yn = 'N'
    </select>

    <!--    게시판 상세보기-->
    <select id="selectBoard" resultType="BoardDto" resultMap="boardDtoResultMap" >

        SELECT
               b.id,
               ba.category_name,
               ba.category_number,
               b.title,
               b.contents,
               b.board_group,
               b.board_sort,
               b.board_depth,
               ba.attached_file_yn,
               ba.attached_file_count,
               ba.comments_yn,
               ba.reply_yn,
               b.create_time,
               b.update_time,
               b.board_admin_id,
               b.del_yn
        FROM
             board AS b
                join board_admin AS ba on b.board_admin_id = ba.id
        WHERE
              b.id = #{id} and b.del_yn = 'N'
    </select>

    <select id="selectBoardUpdate" resultType="BoardUpdateVo" resultMap="boardUpdateVoResultMap" >
        SELECT
               b.id,
               ba.category_name,
               ba.category_number,
               b.title,
               b.contents,
               b.create_time,
               b.update_time,

        FROM
             board AS a
                 join board_admin AS ba
        WHERE
              b.id = #{id}
          and b.del_yn = 'N'
    </select>

    <select id="findByBoardList" parameterType="int" resultType="BoardDto" resultMap="boardDtoResultMap">
        SELECT
              b.id
             ,ba.category_name
             ,ba.category_number
             ,b.title
             ,b.contents
             ,b.create_time
             ,b.update_time
             ,b.del_yn
             ,b.board_admin_id
             ,uf.board_id

        FROM
            board AS b
                join board_admin AS ba on ba.id = b.board_admin_id
                join upload_file uf on b.id = uf.board_id

        WHERE
            b.del_yn = 'N' and ba.id = #{id};
    </select>

    <!--- 생성하기  -->
    <insert id="insertBoard"
            parameterType="BoardSaveVo"
            useGeneratedKeys ="true"
            keyProperty="id">

        INSERT INTO board(
                  title,
                  contents,
                  board_group,
                  board_sort,
                  board_depth,
                  create_time,
                  update_time,
                  board_admin_id
                )values(
                    #{title},
                    #{contents},
                    #{boardGroup},
                    #{boardSort},
                    #{boardDepth},
                    #{createTime},
                    #{updateTime},
                    #{boardAdminId}
                )
    </insert>

    <!--수정하기-->
    <update id="updateBoard" parameterType="BoardUpdateVo">
        update
            board
        SET
            title = #{title},
            contents = #{contents},
            update_time = #{updateTime}
        WHERE
              del_yn = 'N'
          and id = #{id}
    </update>

    <update id="updateBoardGroupSet" parameterType="int">
        UPDATE  board
        SET
                board_group = #{id}
        WHERE
              id = #{id} AND del_yn = 'N'
    </update>

    <update id="deleteBoard" parameterType="int">
        UPDATE board

        SET
            del_yn = 'Y'

        WHERE
            del_yn = 'N' and id = #{id}
    </update>

    <update id="deleteBoardAdmin" parameterType="int">
        UPDATE board AS b
            JOIN board_admin AS ba ON ba.id = b.board_admin_id
            JOIN comments AS co ON b.id = co.board_id

        SET
             ba.del_yn = 'Y'
            ,b.del_yn = 'Y'
            ,co.del_yn = 'Y'

        WHERE

            b.del_yn = 'N'
          AND ba.id = #{id}
          AND b.board_admin_id = ba.id
    </update>

    <select id="countComments" resultType="int">
        SELECT
            count(*) AS commentsCount
        FROM
            board AS b
                JOIN comments AS c ON b.id = c.board_id
        WHERE
            c.del_yn = 'N' AND c.board_id = #{boardId}
    </select>

    <select id="countAttachedFile" resultType="int" >
        SELECT
            count(*) AS attachedFileCount
        FROM
            board AS b
                JOIN upload_file AS u ON b.id = u.board_id
        WHERE
            u.del_yn = 'N' AND u.board_id = #{boardId}
    </select>

    <select id="hierarchicalCalculationFormula" resultType="int" >
        SELECT
                IFNULL(MIN(board_sort),0)
        FROM
                board
        WHERE
              board_group = ${boardGroup}
          AND board_sort > ${boardSort}
          AND board_depth <![CDATA[ <= ]]> ${boardDepth}
          AND del_yn = 'N';
    </select>

    <select id="calculationFormulaResultZero" resultType="int">
        SELECT
            IFNULL(MAX(board_sort),0) + 1
        FROM
            board
        WHERE
            board_group = ${boardGroup} AND del_yn = 'N';
    </select>

    <select id="selectBoardReply" resultType="BoardDto" resultMap="boardDtoResultMap" >
        SELECT
                b.id,
                b.title,
                ba.category_name,
                ba.category_number,
                b.board_group,
                b.board_sort,
                b.board_depth,
                b.board_admin_id,
                b.del_yn
        FROM
            board AS b
                JOIN board_admin AS ba ON b.board_admin_id = ba.id
        WHERE
            b.id = #{id} AND b.del_yn = 'N'
    </select>

    <insert id="insertBoareReply"
            parameterType="BoardSaveVo"
            useGeneratedKeys ="true"
            keyProperty="id">

        INSERT INTO board(
                    title,
                    contents,
                    board_group,
                    board_sort,
                    board_depth,
                    create_time,
                    update_time,
                    board_admin_id

        )VALUES(
                   #{title},
                   #{contents},
                   #{boardGroup},
                   #{boardSort},
                   #{boardDepth}+1,
                   #{createTime},
                   #{updateTime},
                   #{boardAdminId}
               )
    </insert>

    <update id="calculationFormulaResultNotZero" parameterType="BoardSaveVo">
        UPDATE board

        SET board_sort = board_sort + 1

        WHERE

            board_group =  #{boardGroup}
          AND board_sort <![CDATA[ >= ]]>  #{boardSort}
          AND del_yn = 'N';
    </update>

    <update id="decreASeSort" parameterType="BoardDto">
        UPDATE  board
        SET     board_sort = board_sort - 1
        WHERE   board_group = ${boardGroup} AND board_sort > ${boardSort}
    </update>
</mapper>