<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.minboard.mapper.BoardMapper">

    <resultMap id="boardDtoResultMap" type="BoardDto">
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delYn" column="del_yn"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
    </resultMap>

    <resultMap id="boardUpdateVoResultMap" type="BoardUpdateVo">
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delYn" column="del_yn"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <result property="id" column="id"/>
    </resultMap>

    <resultMap id="getDetailViewBoardAllInfoResultMap" type="BoardDto">
        <result property="id" column="id"/>
        <result property="title" column="title" />
        <result property="contents" column="contents" />
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delYn" column="del_yn"/>
        <result property="viewCount" column="view_count"/>
        <result property="likeCount" column="like_count"/>
        <collection property="uploadFileDtoList" ofType="UploadFileDto">
            <result property="storeFileName" column="store_file_name" />
            <result property="originalFileName" column="original_file_name" />
            <result property="extensionName" column="extension_name" />
            <result property="storeFileSize" column="store_file_size" />
        </collection>
    </resultMap>



    <!--- 게시물 전체보기  -->
    <select id="getBoardPagingList" parameterType="BoardDto" resultType="BoardDto" resultMap ="boardDtoResultMap">
        select
               id,
               (@rownum := @rownum + 1) as num,
               title,
               create_time,
               update_time,
               view_count,
               like_count,
               del_yn
        from
             board b,
             (select @rownum := 0) as num_table
        where
              del_yn = 'N'
        order by
                num desc,
                create_time desc
        limit #{paginationInfo.firstRecordIndex}, #{recordsPerPage}
    </select>

    <!--총 게시물 수-->
    <select id="geTotalBoardCount" resultType="int">
        select count(*)
        from board
        where del_yn = 'N'
    </select>

    <!--    게시판 상세보기-->
    <select id="getDetailViewBoard" resultType="BoardDto" resultMap="boardDtoResultMap" >
        select
               id,
               title,
               contents,
               create_time,
               update_time,
               view_count,
               like_count
        from
             board
        where
              id = #{id}
          and del_yn = 'N'
    </select>

    <!--    게시판의 모든정보 상세보기-->
    <select id="getDetailViewBoardAllInfo" resultType="BoardDto" resultMap="getDetailViewBoardAllInfoResultMap" >
        select
                bo.id,
                bo.title,
                bo.contents,
                bo.create_time,
                bo.update_time,
                uf.id,
                uf.store_file_name,
                uf.original_file_name,
                uf.extension_name,
                uf.store_file_size,
                uf.create_time
        from
                board AS bo
                LEFT JOIN upload_file AS uf ON bo.id = uf.board_id
        WHERE
                bo.id = #{id} AND
                del_yn = 'N'
    </select>

    <!--게시판 수정 상세보기 -->
    <select id="getDetailViewUpdateBoard" resultType="BoardUpdateVo" resultMap="boardUpdateVoResultMap" >
        select
               id,
               title,
               contents,
               create_time,
               update_time,
               view_count,
               like_count
        from
             board
        where
              id = #{id}
          and del_yn = 'N'
    </select>

    <!--- 생성하기  -->
    <insert id="createBoard"
            parameterType="BoardSaveVo"
            useGeneratedKeys ="true"
            keyProperty="id">

        INSERT INTO
            board(
                  title,
                  contents,
                  create_time,
                  update_time
            )values(
                #{title},
                #{contents},
                #{createTime},
                #{updateTime}
            )
    </insert>

    <!--수정하기-->
    <update id="updateBoard" parameterType="BoardUpdateVo">
        update
            board
        set
            title = #{title},
            contents = #{contents},
            update_time = #{updateTime}
        where
              del_yn = 'N'
          and id = #{id}
    </update>

    <!--삭제하기-->
    <update id="deleteBoard" parameterType="int">
        update
            board
        set
            del_yn = 'Y'
        where
            del_yn = 'N'
            and id = #{id}
    </update>
</mapper>