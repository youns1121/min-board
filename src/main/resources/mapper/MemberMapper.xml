<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
        PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.minboard.mapper.MemberMapper">


    <resultMap id="MemberMap" type="MemberVo">
        <result property="memberSeq" column="member_seq"/>
        <result property="memberId" column="member_id"/>
        <result property="memberPassword" column="member_password"/>
        <result property="memberName" column="member_name"/>
        <result property="memberGender" column="member_gender"/>
        <result property="memberBirthday" column="member_birthday"/>
        <result property="memberRole" column="member_role"/>
        <result property="createTime" column="create_time"/>
        <result property="updateTime" column="update_time"/>
        <result property="delYn" column="del_yn"/>
    </resultMap>

    <insert id="insertMember"
            parameterType="MemberDto"
            useGeneratedKeys ="true"
            keyProperty="seq"
    >

        insert into members(
                    member_id
                    , member_password
                    , member_name
                    , member_birthday
                    , member_gender
                    , member_role
                    , create_time
                    , update_time
        )values(
                    #{memberId}
                    , #{memberPassword}
                    , #{memberName}
                    , #{memberBirthday}
                    , #{memberGender}
                    , #{memberRole}
                    , #{createTime}
                    , #{updateTime}
         )
    </insert>

    <select id="findByMemberId" parameterType="memberDto" resultType="MemberVo" resultMap="MemberMap">

    select
            member_seq
            , member_id
            , member_password
            , member_name
            , member_birthday
            , member_gender
            , member_role
            , del_yn
            , create_time
            , update_time

    from    members

    where
          member_id = #{memberId} and del_yn = 'N'
    </select>

    <select id="isLoginMember" parameterType="MemberDto" resultType="boolean" >
        select
            (
                case
                    when count(*) = 1 then true
                    when count(*) = 0 then false
                end
            )
        from members
        where member_id = #{memberId} and member_password = #{memberPassword}

    </select>

    <update id="updateMemberLastLogin" parameterType="MemberUpdateDto">
        update members
        set
            last_login_time = #{lastLoginTime}

        where
            member_id = #{memberId}
    </update>
</mapper>